{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rival\\\\Documents\\\\code\\\\Kiptour\\\\Frontend\\\\kiptour\\\\src\\\\App.js\";\nimport './App.css';\nimport { Route, BrowserRouter, Switch, Redirect } from \"react-router-dom\";\nimport routes from './config/routes';\nimport { isRegistered } from './utils/cookie';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst regRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  return /*#__PURE__*/_jsxDEV(Route, { ...rest,\n    render: () => {\n      if (isRegistered()) {\n        return /*#__PURE__*/_jsxDEV(Component, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 18\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: \"/\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 18\n        }, this);\n      }\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n};\n\nconst App = () => {\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Switch, {\n      children: routes.map(route => {\n        if (isRegistered()) {\n          /*#__PURE__*/\n          _jsxDEV(Redirect, {\n            to: \"/registereduser\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Route, {\n            path: route.path,\n            exact: true,\n            component: route.component\n          }, route.path, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/rival/Documents/code/Kiptour/Frontend/kiptour/src/App.js"],"names":["Route","BrowserRouter","Switch","Redirect","routes","isRegistered","regRoute","component","Component","rest","App","map","route","path"],"mappings":";AAAA,OAAO,WAAP;AACA,SAASA,KAAT,EAAgBC,aAAhB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAsD,kBAAtD;AACA,OAAOC,MAAP,MAAmB,iBAAnB;AACA,SAASC,YAAT,QAA6B,gBAA7B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,SAAS,EAACC,SAAX;AAAsB,KAAGC;AAAzB,CAAD,KAAoC;AACnD,sBACE,QAAC,KAAD,OAAWA,IAAX;AACE,IAAA,MAAM,EAAI,MAAM;AACd,UAAIJ,YAAY,EAAhB,EAAoB;AAClB,4BAAO,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD,OAFD,MAGK;AACH,4BAAO,QAAC,QAAD;AAAU,UAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,gBAAP;AACD;AACF;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAbD;;AAeA,MAAMK,GAAG,GAAG,MAAM;AAChB,sBACE,QAAC,aAAD;AAAA,2BACE,QAAC,MAAD;AAAA,gBACGN,MAAM,CAACO,GAAP,CAAYC,KAAD,IAAW;AACrB,YAAGP,YAAY,EAAf,EAAmB;AACjB;AAAA,kBAAC,QAAD;AAAU,YAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AACD,SAFD,MAGK;AACH,8BACE,QAAC,KAAD;AACE,YAAA,IAAI,EAAEO,KAAK,CAACC,IADd;AAEE,YAAA,KAAK,MAFP;AAEQ,YAAA,SAAS,EAAED,KAAK,CAACL;AAFzB,aAGOK,KAAK,CAACC,IAHb;AAAA;AAAA;AAAA;AAAA,kBADF;AAOD;AACF,OAbA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,CArBD;;KAAMH,G;AAuBN,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport { Route, BrowserRouter, Switch, Redirect} from \"react-router-dom\"; \nimport routes from './config/routes';\nimport { isRegistered } from './utils/cookie';\n\nconst regRoute = ({component:Component, ...rest}) => {\n  return (\n    <Route {...rest}\n      render = {() => {\n        if (isRegistered()) {\n          return <Component />\n        }\n        else {\n          return <Redirect to=\"/\" />\n        }\n      }}\n    />\n  )\n}\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        {routes.map((route) => {\n          if(isRegistered()) {\n            <Redirect to='/registereduser' />\n          }\n          else {\n            return (\n              <Route\n                path={route.path} \n                exact component={route.component} \n                key={route.path}\n              />\n            )\n          }\n        })}\n      </Switch>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}